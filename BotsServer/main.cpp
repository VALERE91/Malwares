#include <cstdlib>
#include <iostream>
#include <list>
#include <thread>
#include <boost/asio.hpp>
#include <boost/algorithm/string.hpp>

#include "ChatServer.h"
#include "Message.h"

int main(int argc, char* argv[])
{
	try
	{
		if (argc < 2)
		{
			std::cerr << "Usage: chat_server <port>\n";
			return 1;
		}

		boost::asio::io_service io_service;
		tcp::endpoint endpoint(tcp::v4(), std::atoi(argv[1]));
		ChatServer server(io_service, endpoint);

		std::thread t([&io_service]() { io_service.run(); });

		bool quit = false;
		char line[Message::max_body_length + 1];

		std::cout << "Server ready and running." << std::endl;
		std::cout << ">";
		while (std::cin.getline(line, Message::max_body_length + 1))
		{	
			std::string lineStr(line, strlen(line));
			boost::to_upper(lineStr);

			if (!lineStr.compare("QUIT")) {
				break;
			}
			else {
				Message msg;
				msg.body_length(std::strlen(line));
				std::memcpy(msg.body(), line, msg.body_length());
				msg.encode_header();
				server.send_order(msg);
			}

			std::cout << ">";
		}

		t.join();
	}
	catch (std::exception& e)
	{
		std::cerr << "Exception: " << e.what() << "\n";
	}

	return 0;
}
