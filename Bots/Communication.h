#pragma once

#include <cstdlib>
#include <deque>
#include <iostream>
#include <thread>
#include <boost/asio.hpp>
#include "Message.h"

using boost::asio::ip::tcp;

typedef std::deque<Message> MessageQueue;

class Communication
{
public:
	Communication(boost::asio::io_service& io_service,tcp::resolver::iterator endpoint_iterator);

	void write(const Message& msg);
	void close();

	void ping(std::string ip, unsigned int iter);

private:
	void do_connect(tcp::resolver::iterator endpoint_iterator);
	void do_read_header();
	void do_read_body();
	void do_write();

private:
	boost::asio::io_service& io_service_;
	tcp::socket socket_;
	Message read_msg_;
	MessageQueue write_msgs_;
};

